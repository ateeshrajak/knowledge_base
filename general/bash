# Bash Scripting
#
# For common Tests used in bash conditionals look at:
# bash_conditionals
#
# For string manipulation look at:
# bash_strings
# For data manipulation with bash look at:
# https://www.datascienceatthecommandline.com


# For loop on files
for file in *;
do 
    echo $file found;
done

# For loop on directories
for dir in */;
do 
    echo $dir found;
done

# For loop on fields of an array
for x in "${my_array[@]}"; do
    printf "$x";
done

# To implement a case command:
case "$1"
in
    0) echo "zero found";;
    1) echo "one found";;
    2) echo "two found";;
    3*) echo "something beginning with 3 found";;
esac

# If/Elif/Else
if   [[ condition ]]; then
    echo "inside if"
elif [[ condition ]]; then
    echo "inside elif"
else
    echo "inside else"
fi

# To turn on debugging:
set -x

# To turn off debugging:
set +x

# Retrieve N-th piped command exit status:
printf 'foo' | fgrep 'foo' | sed 's/foo/bar/'
echo ${PIPESTATUS[0]}  # replace 0 with N

# To create a lockfile:
( set -o noclobber; echo > my.lock ) || echo 'Failed to create lock file'

# To loop through lines of a file and execute a command
while read -r line; do for i in $line; do curl -v "$i" > out.log; done; done < urls.txt

# To loop through lines and execute a command on each field of each line except the first field
while read -ra line; do unset line[0]; for field in $line; do curl -v "$field" > out.log; done; done < urls.txt

# To create a temporary file
my_file=$(mktemp)
printf "%s" "ciao" > "$my_file"
rm "$my_file"

# Loop through a file delimited by newlines
while IFS=$'\n' read -r line; do
    echo "$line"
done < $file_name

# Loop through a multiline variable delimited by newlines
while IFS=$'\n' read -r line; do
    echo "$line"
done <<< $variable_name
;; or with modern bash 
mapfile -t newarr <<< "$multilinestring"

# Insert data separated by blanks in an array and loop through them
data="gatto cane mamma papa lol"
read -a myarray <<< $data; 
for field in "${myarray[@]}"; do
    echo "$field"
    echo "\n"
done

# Loop through fileds separate by another character such as comma
lol="ciao,mamma,papa,gatto,cane"; 
IFS=, 
read -a myarray <<< "$lol"
