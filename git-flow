# git-flow
# Reference: https://nvie.com/posts/a-successful-git-branching-model/

# Initialize
git flow init

# Start a new feature called MYFEATURE (develop->feature/myfeature)
git flow feature start MYFEATURE

# Finish up a feature (feature->develop)
git flow feature finish MYFEATURE

# Publish a feature (local ---> remote)
git flow feature publish myfeature

# Getting a published feature (remote ---> local)
git flow feature publish myfeature

# Start a release
git flow release start RELEASE [BASE]
git flow release start v0.1.2

# Publish release 
git flow release publish RELEASE

# Finish up a release (release->develop, release->master)
git flow release finish RELEASE
git flow release finish v0.1.2
git push origin --tags

# Start a hotfix (master->hotfix/myfix)
git flow hotfix start VERSION [BASENAME] ;; note that BASENAME is optional
e.,g
git flow hotfix start v0.1.2-patch-refactoring ;; the VERSION will be the tag name
;; so let it be a version name like `v0.1.49` or `v0.1.40-patch-user-input-in-delete`

# Finish a hotfix (hotfix/myfix->master, hotfix/myfix->develop)
git flow hotfix finish VERSION           ;; here we have to use the same initial VERSION
e.g.,
git flow hotfix finish v0.1.2-patch-refactoring 
;; the VERSION will be the same tag name used with hotfix start
