# Emacs Config


# Where is my Emacs configuration ?

Your emacs config file is probably in one of three places:

- in ~/.emacs (though this is now a bit outdated)
- in ~/.emacs.d/init.el
- in ~/.emacs.d/personal/
    Any .el file in this directory will 
    be read when emacs starts

# Better Defaults
https://github.com/technomancy/better-defaults

# Customization
To customize emacs we have two options:
- M-x customize
- writing elisp inside configuration file

# Customization Interface Commands

M-x customize displays the Customize interface and all the
      groups.

M-x customize-browse opens a tree group browser. Much
      like the regular Customize interface but without the
      group descriptions.

M-x customize-customized customizes options and faces that
      you have changed but not saved. Useful if you want to
      tweak things.

M-x customize-changed displays all options changed since a
      particular Emacs version. Good way to discover new
      features and options.

M-x customize-face prompts for the name of a face to
      Customize. I recommend you put your point on
      the face you want to change. It’ll ﬁll in the name
      automatically.

M-x customize-group prompts for a group name (e.g., python)
      to Customize.

M-x customize-mode customizes the major mode of your cur-
      rent buﬀer. You should do this for every major mode
      you use. It’s a quick way to change things and gain an
      overview of what your major mode can do.

M-x customize-saved Displays all your saved options and
      faces. Extremely handy if you want to track down
      and disable errant changes.

M-x customize-themes Shows a list of installed themes you
      can switch to.

# Associate a key combination to a function (examples)
(global-set-key (kbd "C-x C-b") 'ibuffer)

(global-set-key (kbd "<C-S-up>")     'buf-move-up)
(global-set-key (kbd "<C-S-down>")   'buf-move-down)
(global-set-key (kbd "<C-S-left>")   'buf-move-left)
(global-set-key (kbd "<C-S-right>")  'buf-move-right)

(global-set-key (kbd "C-x |") 'toggle-window-split)


# Reload Configuration without restart
We can open our configuration file and then execute:
M-x load-file RET RET
This will execute the current file and hence
reload the configuration.

# Put all backup files in the same directory
(setq backup-directory-alist `(("." . "~/.saves")))

# Do not create backup files
(setq make-backup-files nil)

# Perform Backup by copy
There are a number of arcane details associated with how Emacs might
create your backup files. Should it rename the original and write out
the edited buffer? What if the original is linked? In general, the safest
but slowest bet is to always make backups by copying.
(setq backup-by-copying t)

# Sort apropos search results by relevance
(setq apropos-sort-by-scores t)
