I2P
===============================================================================

I2P is a darknet using a routing protocol called "garlic routing"
I2P websites are called "eepsites".
In I2P sometimes it will seem that a website is down or not
reachable, although this may be the case, many times it is just
that we have timed-out in the connection process. This happens
because, first, the dns name needs to be translated into a b64 address,
second, an entry point to that service is asked from the floodfill DB,
third, a connection is need to be built to that service,
as all needs to be routed through several hops, it takes some time, 
and sometimes times out on first tryout, or if a tunnel dies for several
reasons. A way to get a better network is to remain connected a lot of time.
The more time we are connected, the better I2P network we get.
Basically in I2P we have both publicized links through services
like inr.i2p (and others) but also non-publicized links.
More details on the basics of how I2P works can be found here:
https://geti2p.net/en/docs/how/intro

# Browser Setup (only I2P)
By default I2P will provide us with a proxy listening on port 4444.
It can be tricky to setup I2P with foxyproxy (or other extensions),
so it is recommended to just use a new profile for firefox with a
specific proxy configuration and some recommended extensions installed
that are:
- HTTPS Everywhere (to enforce HTTPS)
- NoScript (to disable javascript)
And I also prefer to disable history and suggestions.
Basically we have to set up an HTTP proxy on port 4444,
and select the option to use this proxy also for other services
such as SSL/TLS and FTP.
Additionally we must set an exclusion for "127.0.0.1" and "localhost"
since the administrative panel is on localhost at 127.0.0.1:7657.
Lastly, to prevent IP leak in certain scenarios (e.g., WebRTC)
we should set inside the "about:config" page the following
option "media.peerConnection.ice.proxy_only" to "True".

# Browser Setup (I2P + Clearnet)
Another cool configuration used by many users is to have a PAC
file to configure the proxy to have more flexibility and be
able to browse ".i2p" links using the I2P proxy and clearnet
Web services with no proxy.
In order to do this, it will be enough to create a PAC file
built like this:
```javascript
function FindProxyForURL(url, host)
{
    if(host.match(/[.]i2p$/))
        return 'PROXY 127.0.0.1:4444';
    return 'DIRECT';
}
```
Then setup the proxy to "Automatic proxy configuration from URL",
and give the path to where our PAC file is saved on our machine.
At this point we can click on "Reload" and browse the I2P through
the I2P router and the classic internet by using no proxy.
Also in this case anyway it is recommended to have some extensions
installed such as:
- HTTPS Everywhere (to enforce HTTPS)
- NoScript (to disable javascript)
And I also prefer to disable history and suggestions.
Lastly, to prevent IP leak in certain scenarios (e.g., WebRTC)
we should set inside the "about:config" page the following
option "media.peerConnection.ice.proxy_only" to "True".


# Start the I2P network (Launches the I2P router)
./i2prouter start

# Check the status of the I2P service
./i2prouter status

# Stop the I2P network (stops the I2P router)
./i2prouter stop

# Administrative Panel
Browse 127.0.0.1:7657

# Personal WebSite
Browse 127.0.0.1:7658

# List of Interesting Links (as of May 2020)
inr.i2p  (this website contains all the alive hosts)
eepsitei2pwiki.i2p (A Wiki with useful info)
seeker.i2p (Search engine)
tracker2.postman.i2p (Torrent tracker)
secure.thetinhat.i2p (Blog about privacy and security)
stats.i2p (stats about I2P)
no.i2p
http://cuss2sgthm5wfipnnztrjdvtaczb22hnmr2ohnaqqqz3jf6ubf3a.b32.i2p/ (Search engine)
https://geti2p.net/it/blog/post/2019/06/02/mirroring-guide (how to advertise eepsite)

# Ports used by I2P
7657 Web console (for configuration)
7658 local web server 
4444 HTTP Proxy 
4445 HTTPS Proxy 
6668 IRC Proxy 


# I2P High Speed
A good source for articles about reaching high speed with I2P is this:
echelon.i2p/docs/

Some tweaks to run high profile router: 
0. raise bandwidth to limits above 1000 on http://127.0.0.1:7657/config -
more than 8000 is useless, inbuilt bloom filter is limited to 8 MB/sec
1. set share percentage to 100% 
2. be reachable - open the port shown on http://127.0.0.1:7657/confignet
in your firewall and forard that port in UDP and TCP to your I2P
router. DO NOT tell that port anyone!
    2.a. Do NOT use VPN or Tor on top of I2P - beside
is fine
3. raise java heap memory to 512 or 756 MB in wrapper.config
4. raise the number of active files in /etc/security/limits.conf on
linux with this line to 8192 or alike: *               hard    nofile 8192
5. on http://127.0.0.1:7657/configadvanced - or in config file
~/.i2p/router.config set these parameters to sane values you like:
i2np.ntcp.maxConnections=4000
i2np.udp.maxConnections=4000
router.maxParticipatingTunnels=15000
6. restart server, Those values are more or less sane. I have higher
limits, use only one core of my hexcore root server and push roughly 4
MB/sec to the net.


Now you have to wait a bit, it takes up to 3 weeks to get higher
bandwidth, the net is self managing and balancing, it needs to get known
to your router and use it.  If you want to take a shortcut, use some
active torrents ot other tools creating some constant client traffic
for 1-3 days.
