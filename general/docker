# To start the docker daemon
sudo systemctl start docker
or
docker -d

# To list all images
docker images

# To remove an image
docker rmi <image-id>

# To search for an image
docker search <image-name>

# To download an image
docker pull <image-name>

# To list currently running containers
docker ps

# To list all containers (running and stopped)
docker ps -a

# To remove a container
docker rm <container-id>

# To remove all exited containers
docker rm $(docker ps -a -q -f status=exited)

# To start a container with an interactive shell
docker run -it <image-id> /bin/bash

# To start a container and remove it automatically at exit
docker run -it --rm alpine /bin/bash

# To start a container in "daemon mode" and assign a custom nome
docker run -d --name <custom-name> my-httpd:latest

# To start a container in "daemon mode" and map port 80 of container to port 8080 of host
docker run -d -p 8080:80 nginx:1.7 

# To start a container in "daemon mode" and map port 80 of container to random port of host
docker run -d -P nginx:1.7 

# To check port mappings of a container
docker port <container-id>

# To mount a directory on the container
docker run -it -v <host-dir> nginx:1.7

# To map a directory from host to container
docker run -it -v <host-dir>:<guest-dir> nginx:1.7

# To view logs of a specific container
docker logs containerName 

# To view logs of a specific container (and follow as in tail -f)
docker logs -f <container-id>

# To inspect a container and view all details related to it
docker inspect containerName 

# To check the ports exposed by a container
docker port <container-id>

# To resume a stopped container
docker start -ia <container-id>

# To stop a container
docker stop <container-id>

# To "shell" into a running container (docker-1.3+)
docker exec -ti <container-id> bash

# To inspect a running container
docker inspect <container-id> (or <container-id>)

# To get the process ID for a container
docker inspect --format {{.State.Pid}} <container-name-or-id>

# To list (and pretty-print) the current mounted volumes for a container
docker inspect --format='{{json .Volumes}}' <container-id> | python -mjson.tool

# To copy files/folders between a container and your host
docker cp foo.txt <container-name>:/foo.txt
docker cp <container-name>:/dest/path/file.txt  /path/to/myfile.txt

