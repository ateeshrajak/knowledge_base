# To print file metadata
ffmpeg -i <file>

# Print file metadata without ffmpeg banner lines
ffmpeg -i <file> -hide_banner

# Convert between video formats
ffmpeg -i <input_file>.mp4 <output_file>.avi

# Convert between video formats but preserve quality
ffmpeg -i <input_file>.mp4 -qscale 0 <output_file>.avi

# Check list of formats
ffmpeg -formats

# Convert video to audio
ffmpeg -i input.mp4 -vn output.mp3

# Convert video to audio (with more advanced transcoding options)
## -vn – Indicates that we have disabled video recording in the output file.
## -ar – Set the audio frequency of the output file. The common values used are  22050, 44100, 48000 Hz.
## -ac – Set the number of audio channels.
## -ab – Indicates the audio bitrate.
## -f – Output file format. In our case, it’s mp3 format.
ffmpeg -i input.mp4 -vn -ar 44100 -ac 2 -ab 320 -f mp3 output.mp3

# Decrease volume of audio files (Half)
ffmpeg -i input.mp3 -af 'volume=0.5' output.mp3

# Increase volume of audio files
ffmpeg -i input.mp3 -af 'volume=1.5' output.mp3

# Change resolution of a video file
ffmpeg -i input.mp4 -filter:v scale=1280:720 -c:a copy output.mp4
or
ffmpeg -i input.mp4 -s 1280x720 -c:a copy output.mp4

# Compress audio file (by decreasing bitrate)
ffmpeg -i input.mp3 -ab 128 output.mp3

# Compress video file
ffmpeg -i input.mp4 -vf scale=1280:-1 -c:v libx264 -preset veryslow -crf 24 output.mp4

# Remove audio stream from a video
ffmpeg -i input.mp4 -an output.mp4

# Extract images from a video
ffmpeg -i input.mp4 -r 1 -f image2 image-%2d.png

# To convert all m4a files to mp3
for f in *.m4a; do ffmpeg -i "$f" -acodec libmp3lame -vn -b:a 320k "${f%.m4a}.mp3"; done

# Split audio/video into multiple parts (if a movie/audio is too long)
ffmpeg -i input.mp4 -t 00:00:30 -c copy part1.mp4 -ss 00:00:30 -codec copy part2.mp4

# Extract video from minute 45:36 to the end 01:59:52 and save it in out.mp4
ffmpeg -ss 00:45:36 -i SOC_intro.mp4 -to 01:59:52  -c copy  out.mp4

# Join multiple parts
;; join.txt must contain the path to the list of files to join
ffmpeg -f concat -i join.txt -c copy output.mp4

# Add subtitles to a video file
fmpeg -i input.mp4 -i subtitle.srt -map 0 -map 1 -c copy -c:v libx264 -crf 23 -preset veryfast output.mp4

# Preview video/audio
ffplay video.mkv
ffplay video.mp3

# Increase/Decrease video playback speed
ffmpeg -i input.mp4 -vf "setpts=0.5*PTS" output.mp4 ;; increase speed with n < 1
ffmpeg -i input.mp4 -vf "setpts=4*PTS" output.mp4   ;; decrease speed with n > 1

# Increase/decrease Audio playback speed
ffmpeg -i input.mp4 -filter:a "atempo=2.0" -vn output.mp4 ;; increase speed with n > 1

# To convert video from .foo to .bar
# -g : GOP, for searchability
ffmpeg -i input.foo -vcodec bar -acodec baz -b:v 21000k -b:a 320k -g 150 -threads 4 output.bar

# To convert image sequence to video:
ffmpeg -r 18 -pattern_type glob -i '*.png' -b:v 21000k -s hd1080 -vcodec vp9 -an -pix_fmt yuv420p -deinterlace output.ext

# To combine video and audio into one file
ffmpeg -i video.ext -i audio.ext -c:v copy -c:a copy output.ext

# Listen to 10 seconds of audio from a video file
#
# -ss : start time
# -t  : seconds to cut
# -autoexit : closes ffplay as soon as the audio finishes
ffmpeg -ss 00:34:24.85 -t 10 -i path/to/file.mp4 -f mp3 pipe:play | ffplay -i pipe:play -autoexit
