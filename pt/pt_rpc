# PT RPC
## most likely we can see this happen on port 111 (which may also indicate
## the presence of an NFS server) or on port 135 on Microsoft Windows
## systems.
## Port 135 TCP is used in general for remote inter-process communication,
## where some processes can publish some functions and other
## processes can call those functions.
## It is remote, since this makes it possible to interact from
## different machines.

## In particular port 135 TCP works as service mapper, so that
## we can query the system to understand which services are running
## on that host.
#
## Depending on the host configuration, the RPC endpoint mapper can
## be accessed through TCP and UDP port 135, via SMB with a null or
## authenticated session (TCP 139 and 445), and as a web service listening
## on TCP port 593.


# Nmap Scan
nmap -n -v -sV -Pn -p 135 --script=msrpc-enum 192.168.1.10 

# Enumeration - Hidden DCERPC Service Discovery (metasploit)
;; Module will query the endpoint mapper and make a list of all ncacn_tcp
;; RPC services. It will then connect to each of these services and use the
;; management API to list all other RPC services accessible on this port. Any
;; RPC service found attached to a TCP port, but not listed in the endpoint
;; mapper, will be displayed and analyzed to see whether anonymous access
;; is permitted.
use auxiliary/scanner/dcerpc/hidden
run

# Enumeration - Remote Management Interface Discovery (metasploit)
;; Module can be used to obtain information from the Remote Management Interface DCERPC service.
use auxiliary/scanner/dcerpc/management
run

# Enumeration - DCERPC TCP Service Auditor (metasploit)
;; Determine what DCERPC services are accessible over a TCP port.
use auxiliary/scanner/dcerpc/tcp_dcerpc_auditor
run


# Exploit ms03-026
msf > use exploit/windows/dcerpc/ms03_026_dcom

# Enumeration - Endpoint Mapping (metasploit)
;; Module can be used to obtain information from the Endpoint Mapper service
msf > auxiliary/scanner/dcerpc/endpoint_mapper
msf > run

# Enumeration (impacket)
;; We can use rpcdump from Impacket to dump the RPC information. This tool
;; can communicate over Port 135, 139 and 445. The rpcdump tool from rpctools
;; can also extract information from Port 593.
rpcdump.py 10.10.xx.xx




# Enumerate NFS mounts
msf > use auxiliary/scanner/nfs/nfsmount
msf > run

# to get a lot of information on the RPC interface.


# Get Information with IP address
rpcinfo $IP
;; or
rpcinfo -p $IP

# Get information about NFS
showmount -a 172.30.xx.xx

# Connect to the RPC console
rpcclient -U "" $IP
or 
rpcclient -U "" $IP
or
rpcclient -U "DOMAINNAME.LOCAL\username" 10.10.10.175

# Commands within RPC console
srvinfo

# Get the list of users in the domain
enumdomusers

# Get the list of groups in the domain
enumdomgroups

# Get the list of users within a group (0x200 are the domain admins)
## Here users are shown in the form:
## rid:[0x451] attr:[0x7]
## rid:[0x1f4] attr:[0x7]
## We have to convert these numbers, e.g., RID 1F4 (= 500) is the Administrator
querygroupmem 0x200

getdompwinfo
querydominfo
netshareenum
netshareenumall


# Get Information about IP Address
enum4linux -a $IP


# We can use enum4linux to get some information, such as
# operating system info:
enum4linux -o <ip-address>

# If we have username/password we could get much more information.


# RPC on port 111
rpcinfo -p 192.168.1.111
msf >use auxiliary/scanner/nfs/nfsmount
