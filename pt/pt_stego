# Steghide
## Steghide is a steganography program that hides data in various kinds of image
## and audio files, only supports these file formats: JPEG, BMP, WAV and AU. but
## it’s also useful for extracting embedded and encrypted data from other files.
## It can be installed with apt however the source can be found on github.


# displays info about a file whether it has embedded data or not
steghide info <file>

# Extracts embedded data from a file (steghide only works on jpg files)
steghide extract -sf <file>
OR 
steghide -xf <filename.jpg>

zsteg is the alternative to steghide for png files.



# Crack password for image metadata
pip3 install stegcracker
stegcracker image.png /usr/share/wordlists/rockyou.txt

# Alternative tools that may be worth to check out and try are:
- [Aperisolve](https://aperisolve.fr/) (this does most, if not all, of the things)
- [OpenStego](https://www.openstego.com/)
- [Stegpy](https://github.com/Baldanos/Stegpy)
- [Outguess](https://outguess.rbcafe.com/)
- [jphide](http://linux01.gwdg.de/~alatham/stego.html)



### Foremost
# Foremost is a program that recovers files based on their headers , footers and
# internal data structures , I find it useful when dealing with png images.
# It can be installed with apt however the source can be found on github.


# Extracts data from the given file.
foremost -i file


### Stegsolve
# Sometimes there is a message or a text hidden in the image itself and in order
# to view it you need to apply some color filters or play with the color levels.
# You can do it with GIMP or Photoshop or any other image editing software but
# stegsolve made it easier. it’s a small java tool that applies many color filters
# on images. Personally i find it very useful
# You can get it from github


### Strings
Strings is a linux tool that displays printable strings in a file. That simple
tool can be very helpful when solving stego challenges. Usually the embedded
data is password protected or encrypted and sometimes the password is actaully
in the file itself and can be easily viewed by using strings
It’s a default linux tool so you don’t need to install anything.


# displays printable strings in the given file
strings <file> > strings.txt

# displays printable strings which are at least 8 chars in a file
strings -n 8 <file> | sort -u > strings.txt

# ???
strings -n 7 -t x filename.png


### Exiftool
# Sometimes important stuff is hidden in the metadata of the image or the file ,
# exiftool can be very helpful to view the metadata of the files.
# You can get it from here


# shows the metadata of the given file
exiftool file
OR 
exiftool -b file

# or alternatively check this tool, which is also very comprehensive:
# [Jeffrey Friedl's Metadata Viewer](http://exif.regex.info/exif.cgi)


### PNGCheck for Corrupt Images

# We can use pngcheck to look for optional/correct broken chunks. This is vital if
# the image appears corrupt. 

# Checks corrupt image
pngcheck -vtp7f filename.png
# -v is for verbose 
# -t and 7 display text chunks
# -p displays contents of some other optional chunks
# -f forces continuation after encountered errors

### Stegdetect 
# This is another nice tool to have in our toolset


### Exiv2
# A tool similar to exiftool.
# It can be installed with apt however the source can be found on github.
# Official website


# shows the metadata of the given file
exiv2 file

### Dealing with images

We generally have to analyze images with some editing software, .e.g., gimp and
try the following things:
    * zoom it
    * change contrast
    * change brightness
    * try the online tool https://29a.ch/photo-forensics/#forensic-magnifier 

#### Explore Colour, Bit Planes and RGBA values

Images can be hidden inside of the colour/bit planes. Upload your image to this
site here. On the image menu page, explore all options in the top panel (i.e.
Full Red, Inverse, LSB etc).

[Georgeom Image Analysis](https://georgeom.net/StegOnline/upload)

Go to "Browse Bit Planes", and browse through all available planes. 

Sometimes information can also be hidden as sequences of RGBA values,
so it may be worth to preview the RGBA values.
Try converting them to text, and see if any flag is found. It might be worth 
looking at just the R/G/B/A values on their own. 

If the PNG is in type 3, we may look through the colour palette.
This site has a feature for randomizing the colour palette, which 
may reveal the flag. You can also browse through each colour in the palette,
if the flag is the same colour.
It may also be worth looking at the palette indexes themselves, as a string 
may be visible from there. 



### Binwalk
Binwalk is a tool for searching binary files like images and audio files for
embedded files and data.
It can be installed with apt however the source can be found on github.


# Displays the embedded data in the given file
binwalk file

# Displays and extracts the data from the given file
binwalk -e file

# Extract recursively all embedded files
binwalk -Me file.png


### Zsteg
zsteg is a tool that can detect hidden data in png and bmp files.
to install it gem install zsteg, The source can be found on github.


# Runs all the methods on the given file
zsteg -a file

# Extracts data from the given payload
zsteg -E file 


### Wavsteg
# WavSteg is a python3 tool that can hide data and files in wav files and can also
# extract data from wav files.
# You can get it from github


# extracts data from a wav
python3 WavSteg.py -r -s soundfile -o outputfile


### Sonic visualizer
# Sonic visualizer is a tool for viewing and analyzing the contents of audio
# files, however it can be helpful when dealing with audio steganography. You can
# reveal hidden shapes in audio files.


### Unicode Text Steganography (WEB)
A web tool for unicode steganography , it can encode and decode text.


### npiet online (WEB)
an online interpreter for piet. piet is an esoteric language , programs in piet
are images. read more about piet here


### dcode.fr (WEB)
Sometimes when solving steganography challenges you will need to decode some
text. dcode.fr has many decoders for a lot of ciphers and can be really helpful.


### StegCracker
A tool that bruteforces passwords using steghide


### Fcrackzip


Sometimes the extracted data is a password protected zip , this tool bruteforces
zip archives.
It can be installed with apt however the source can be found on github.

# bruteforces a zip file 
fcrackzip -u -D -p wordlist.txt file.zip


## References

[StegOnline Checklist](https://georgeom.net/StegOnline/checklist)
